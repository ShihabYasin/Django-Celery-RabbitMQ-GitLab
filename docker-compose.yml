version: '3'

services:

  nginx:
    image: nginx:1.13
    ports:
      - 80:80
    restart: always
    volumes:
      - ./devops/nginx.conf:/etc/nginx/conf.d/default.conf
      - ./static:/static
    depends_on:
      - web

  web:
    image: registry.gitlab.com/your_username/your_project_name:latest
    build:
      context: .
    container_name: web
    ports:
      - '8000:8000'
    command: bash -c 'python manage.py migrate --noinput && python manage.py collectstatic --noinput && gunicorn conf.wsgi:application -w 2 -b :8000 --capture-output --log-level=info'
    depends_on:
      - postgres
    volumes:
      - ./static:/static
      - ./media:/media/
    env_file: .env
    links:
      - rabbit
      - postgres

  postgres:
    restart: always
    image: postgres:10
    container_name: postgres

  rabbit:
    image: rabbitmq:3.7-management
    hostname: "rabbit"
    environment:
      RABBITMQ_DEFAULT_USER: "rabbitmq"
      RABBITMQ_DEFAULT_PASS: "rabbitmq"
    ports:
      - "15672:15672"
      - "5672:5672"

  celery:
    image: registry.gitlab.com/your_username/your_project_name:latest
    build:
      context: .
    container_name: cl01
    env_file: .env
    command: celery -A conf.celery:app worker -B --loglevel=debug --purge
    volumes:
      - ./static:/static
      - ./media:/media/
    depends_on:
      - rabbit
      - web
      - postgres
    links:
      - rabbit
      - postgres
